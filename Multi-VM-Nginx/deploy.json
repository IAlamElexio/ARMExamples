{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 2,
            "maxValue": 10
        },
        "username": {
            "type":"string",
            "defaultValue":"unusedadmin"
        },
        "publicKey": {
            "type":"securestring",
            "defaultValue":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUjNyVx8TpJ2vzstVOn9/eeXI18excesMzi45LTWjcSoM2Hzpaf4EUWUmZzG5xJV0wFmHBxy0yZXsUUUQ2wiBkVSfkKRoULQqMI96QQAXpw0ELI6ewXdvi7087fPynSmWGdZRaO4DvfXtGsaDl4M8c2E2Fh3HiApeOwlLhp+ewFt7lGx2rXrQSkWfIWOidrbCDjyQMujbVfg8iG0sMRpeDIpAtHnpOavOWPUUrJLcL31luoYPzTIJdBR30SzBfL06qvJ09O9v0mR1YOX/NEJMsg74bvKF0gPusrsHkIFSTzglKCZ0CPEJWDItPT+bOT+u8uJ12ZYyZoXEMYpnXsyRz"
        }
    },
    "variables": {
        "namePrefix": "nginx-",
        "vnetName": "[concat(variables('namePrefix'), 'vnet')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "vnetAddressPrefix": "10.100.0.0/16",
        "nsgName": "[concat(variables('namePrefix'), 'nsg')]",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "avsetName": "[concat(variables('namePrefix'), 'avset')]",
        "nginxSubnetName": "nginx",
        "nginxSubnetRef": "[concat(variables('vnetId'), '/subnets/', variables('nginxSubnetName'))]",
        "nginxSubnetPrefix": "10.100.1.0/24",
        "appGwSubnetName": "appgw",
        "appGwSubnetPrefix": "10.100.0.0/24",
        "vmScript": "IyEvYmluL2Jhc2gKIGFwdC1nZXQgLXkgdXBkYXRlICYmIGFwdC1nZXQgLXkgaW5zdGFsbCBuZ2lueAp2bU5hbWU9JChjdXJsIC1IIE1ldGFkYXRhOnRydWUgImh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvbWV0YWRhdGEvaW5zdGFuY2UvY29tcHV0ZS9uYW1lP2FwaS12ZXJzaW9uPTIwMTktMDYtMDQmZm9ybWF0PXRleHQiKQplY2hvICI8aDEgc3R5bGU9J3RleHQtYWxpZ246Y2VudGVyO3BhZGRpbmctdG9wOiAxMDBweDsnPlRoaXMgaXMgd2Vic2VydmVyICR2bU5hbWUgPC9oMT4iID4gL3Zhci93d3cvaHRtbC9pbmRleC5odG1s"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('avsetName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2,
                "managed": true
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('nginxSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('nginxSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('appGwSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('appGwSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('namePrefix'), copyindex(), '-nic')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicCopy",
                "count": "[parameters('vmCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('nginxSubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('namePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('namePrefix'), copyindex(), '-nic'))]"
            ],
            "copy": {
                "name": "vmCopy",
                "count": "[parameters('vmCount')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('avsetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namePrefix'), copyindex(), '-nic'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('namePrefix'), copyindex())]",
                    "adminUsername": "[parameters('username')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('username'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('publicKey')]"
                                }
                            ]
                        }
                    }
                }
            },
            "resources": [
                {
                    "name": "CustomScript",
                    "type": "extensions",
                    "location": "[parameters('location')]",
                    "apiVersion": "2019-03-01",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', concat(variables('namePrefix'), copyindex()))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "script": "[variables('vmScript')]"
                        }
                    }
                }
            ]
        }
    ]
}